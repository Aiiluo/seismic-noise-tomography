#======
[paths]
#======

MSEED_DIR = ../IRIS data                     ; dir of miniseed files
STATIONXML_DIR = ../StationXML files         ; dir of StationXML files
DATALESS_DIR = ../Dataless seed              ; dir of dataless files

CROSSCORR_DIR = ./output/cross-correlation  ; dir of cross-correlation results
FTAN_DIR = ./output/FTAN                    ; dir of FTAN results (including dispersion curves)
TOMO_DIR = ./output/tomography              ; dir of tomographic inversion results


#=====
[maps]
#=====

# paths to shapefiles (coasts, tectonic provinces and labels), used
# to plot maps:
#
# - `COAST_SHP` should be a shapefile containing lines or polygons
#   representing coasts (you can also include borders).
#
# - `TECTO_SHP` should be a shapefile containing polygons representing
#   tectonic provinces, AND AN ATTRIBUTE TABLE whose first field
#   contains the province's category, which will be used to affect
#   a color to the polygon (see below).
#
# - `TECTO_LABELS` should be a shapefile containing points representing
#   the location of the labels associated with the tectonic provinces,
#   AND AN ATTRIBUTE TABLE whose first field contains the label (characters
#   '\' will be replaced with line breaks), and the second field contains
#   the label's angle.
#
# You can set any of these files to `null`.

COAST_SHP = ./shapefiles/SouthAmericaCoasts.shp
TECTO_SHP = ./shapefiles/SouthAmericaTectonicElements.shp
TECTO_LABELS = ./shapefiles/SouthAmericaTectonicElementsLabels.shp

# JSON dict giving the color of the tectonic provinces according to their
# category (first field of the attribute table of `TECTO_SHP`, see above).
# A category not appearing in this dict will be filled with white.
# A color can be any object understood by matplotlib: a string (e.g., "green"),
# a grey shade (e.g., "0.5"), an html hex string (e.g., "#eeefff"),
# a R/G/B tuple (e.g., [0.5, 0.5, 0.5]) or a R/B/G/alpha tuple (e.g.,
# [0.5, 0.5, 0.5, 0.5]).

TECTO_COLORS = {
    "Archean": [1, 0.757, 0.757],
    "Phanerozoic": [1, 1, 0.878],
    "Neoproterozoic": "0.863"
    }

# bounding box of (large) global maps and (small) inset maps
# (min lon, max lon, min lat, max lat in JSON lists)

BBOX_LARGE = [-70, -30, -32, 8]
BBOX_SMALL = [-65, -35, -29, 1]


#==================
[cross-correlation]
#==================

USE_DATALESSPAZ = False             ; use dataless files to remove instrument response?
USE_STATIONXML = True               ; use stationXML files to remove instrument response?

FIRSTDAY = 1/1/1996                 ; first day of cross-correlation (d/m/y)
LASTDAY = 31/3/2012                 ; last day of cross-correlation (d/m/y)
MINFILL = 0.99                      ; minimum data fill within day

CROSSCORR_STATIONS_SUBSET = null    ; subset of stations (null if all, else JSON list)
CROSSCORR_TMAX = 2000               ; max time window (s) for cross-correlation
CROSSCORR_SKIPLOCS = ["50"]         ; locations to skip (JSON list)

PERIODMIN = 7.0                     ; bandpass parameters
PERIODMAX = 150.0
CORNERS = 2
ZEROPHASE = True
PERIOD_RESAMPLE = 1.0               ; resample period to decimate traces, after band-pass

ONEBIT_NORM = False                 ; one-bit normalization?
PERIODMIN_EARTHQUAKE = 15.0         ; earthquakes periods band
PERIODMAX_EARTHQUAKE = 50.0

WINDOW_FREQ = 0.0001                ; freq window (Hz) to smooth ampl spectrum

CALC_SPECTRA = False                ; plot spectra (instead of calculating cross-corr)?
SPECTRA_STATIONS = ["NUPB", "PACB"] ; stations (JSON list)
SPECTRA_FIRSTDAY = 1/5/2002
SPECTRA_LASTDAY = 2/5/2002
PLOT_TRACES = True                  ; plot traces OF LAST DAY along with spectra?


#=====
[FTAN]
#=====

# default period bands (JSON list), used to:
# - plot cross-correlation by period bands, in plot_FTAN(), plot_by_period_bands()
# - plot spectral SNR, in plot_spectral_SNR()
# - estimate min spectral SNR, in FTANs()

PERIOD_BANDS = [[4, 7], [7, 15], [10, 22], [15, 30], [20, 35]]
# (these bands focus on periods ~5, 10, 15, 20, 25 seconds)

# default parameters to define the signal and noise windows used to
# estimate the SNR:
# - the signal window is defined according to a min and a max velocity as:
#   dist/vmax < t < dist/vmin
# - the noise window has a fixed size and starts after a fixed trailing
#   time from the end of the signal window

SIGNAL_WINDOW_VMIN = 2.5
SIGNAL_WINDOW_VMAX = 5.0
SIGNAL2NOISE_TRAIL = 500.0
NOISE_WINDOW_SIZE = 500.0

# periods and velocities of FTAN analysis: start, stop and step (JSON lists)

RAWFTAN_PERIODS_STARTSTOPSTEP = [3.0, 45.1, 1.0]
CLEANFTAN_PERIODS_STARTSTOPSTEP = [5.0, 30.1, 1.0]
FTAN_VELOCITIES_STARTSTOPSTEP = [2.0, 5.51, 0.01]

# default width parameter of the narrow Gaussian bandpass filters
# applied in the FTAN. The bandpass filters take the form:
#
#  exp[-FTAN_ALPHA * ((f-f0)/f0)**2],
#
# where f is the frequency and f0 the center frequency of the filter.

FTAN_ALPHA = 20


# ============
[tomography]
# ============

# Default parameters related to the velocity selection criteria

MINSPECTSNR = 7             ; min spectral SNR to retain velocity
MINSPECTSNR_NOSDEV = 15     ; min spectral SNR to retain velocity if no std dev
MAXSDEV = 0.1               ; max sdt dev (km/s) to retain velocity
MINNBTRIMESTER = 4          ; min nb of trimesters to estimate std dev
MAXPERIOD_FACTOR = 0.08333  ; max period = *MAXPERIOD_FACTOR* * pair distance

# Default internode spacing of grid

LONSTEP = 1
LATSTEP = 1

# Default correlation length of the smoothing kernel:
# S(r,r') = exp[-|r-r'|**2 / (2 * correlation_length**2)]

CORRELATION_LENGTH = 150

# Default strength of the spatial smoothing term (alpha) and the
# weighted norm penalization term (beta) in the penalty function

ALPHA = 600
BETA = 100

# Default parameter in the damping factor of the norm penalization term,
# such that the norm is weighted by exp(- lambda_*path_density)
# With a value of 0.15, penalization becomes strong when path density < ~20
# With a value of 0.30, penalization becomes strong when path density < ~10

LAMBDA = 0.3